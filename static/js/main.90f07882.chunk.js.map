{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","length","map","id","UserInfo","user","PostInfo","post","title","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"018IAAaA,EAAc,SAAC,GAAD,QAAGC,QAAWC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,KAA3B,OACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IAEtC,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QCZMG,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SACGG,EAASC,OAAS,EACfD,EAASE,KAAI,SAAAT,GAAO,OACpB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQU,OAC5C,mBAAG,UAAQ,oBAAX,gCCPKC,G,MAAW,SAAC,GAAD,QAAGC,KAAQX,EAAX,EAAWA,KAAMC,EAAjB,EAAiBA,MAAjB,OACtB,8BACG,eAED,mBAAGE,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGD,SCFMY,EAAW,SAAC,GAAD,QAAGC,KAAQF,EAAX,EAAWA,KAAML,EAAjB,EAAiBA,SAAUQ,EAA3B,EAA2BA,MAAOZ,EAAlC,EAAkCA,KAAlC,OACtB,sBAAKC,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCW,IACjC,cAAC,EAAD,CAAUH,KAAMA,OAGlB,mBAAGR,UAAU,iBAAb,SACGD,IAGH,uBAEA,cAAC,EAAD,CAAaI,SAAUA,QChBdS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKb,UAAU,WAAf,SACGa,EAAMR,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,UCW/B,IAAMO,EAAQC,EAClBT,KAAI,SAAAK,GAAI,kCACJA,GADI,IAEPF,MAZiBO,EAYCL,EAAKK,OAXlBC,EAAgBC,MAAK,SAAAT,GAAI,OAAIA,EAAKF,KAAOS,MAAW,MAYzDZ,UAToBe,EASKR,EAAKJ,GARzBa,EACJC,QAAO,SAAAxB,GAAO,OAAIA,EAAQsB,SAAWA,MAAW,QAFrD,IAAwBA,EAJHH,KAgBRM,EAAM,kBACjB,0BAASrB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUa,MAAOA,QCvBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.90f07882.chunk.js","sourcesContent":["export const CommentInfo = ({ comment: { name, email, body } }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{name}</strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${email}`}\n      >\n        {email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {body}\n    </div>\n  </div>\n\n);\n","import './CommentList.scss';\n\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.length > 0\n      ? comments.map(comment => (\n        <CommentInfo comment={comment} key={comment.id} />))\n      : <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n    }\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user: { name, email } }) => (\n  <p>\n    {' Posted by  '}\n\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  </p>\n);\n","import './PostInfo.scss';\n\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({ post: { user, comments, title, body } }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{title}</h3>\n      <UserInfo user={user} />\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {body}\n    </p>\n\n    <hr />\n\n    <CommentList comments={comments} />\n\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nfunction getCommentById(postId) {\n  return commentsFromServer\n    .filter(comment => comment.postId === postId) || null;\n}\n\nexport const posts = postsFromServer\n  .map(post => ({\n    ...post,\n    user: getUserById(post.userId),\n    comments: getCommentById(post.id),\n  }));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}